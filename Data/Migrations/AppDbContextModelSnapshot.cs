// <auto-generated />
using System;
using Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Data.Entities.BuscaEspecialidade", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Especialidadeid")
                        .HasColumnType("int");

                    b.Property<DateTime>("criado")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("descricao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("editado")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("id_especialidade")
                        .HasColumnType("int");

                    b.Property<int>("situacao")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("Especialidadeid");

                    b.ToTable("busca_especialidade");
                });

            modelBuilder.Entity("Data.Entities.Especialidade", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("criado")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("descricao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("editado")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("situacao")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("especialidade");
                });

            modelBuilder.Entity("Data.Entities.Medico", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("criado")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("crm")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("editado")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("estado_crm")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("situacao")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("medico");
                });

            modelBuilder.Entity("Data.Entities.Plantao", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Especialidadesid")
                        .HasColumnType("int");

                    b.Property<int>("Medicosid")
                        .HasColumnType("int");

                    b.Property<int>("UnidadeSaudesid")
                        .HasColumnType("int");

                    b.Property<DateTime>("criado")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("dia_semana")
                        .HasColumnType("int");

                    b.Property<DateTime>("editado")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("horariofim")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("horarioinicio")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("id_especialidade")
                        .HasColumnType("int");

                    b.Property<int>("id_medico")
                        .HasColumnType("int");

                    b.Property<int>("id_unidade")
                        .HasColumnType("int");

                    b.Property<int>("situacao")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("Especialidadesid");

                    b.HasIndex("Medicosid");

                    b.HasIndex("UnidadeSaudesid");

                    b.ToTable("plantao");
                });

            modelBuilder.Entity("Data.Entities.UnidadeSaude", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("cnpj")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("criado")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("editado")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("endereco")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("numero")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("situacao")
                        .HasColumnType("int");

                    b.Property<string>("telefone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("unidade_saude");
                });

            modelBuilder.Entity("Data.Entities.BuscaEspecialidade", b =>
                {
                    b.HasOne("Data.Entities.Especialidade", "Especialidade")
                        .WithMany()
                        .HasForeignKey("Especialidadeid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Especialidade");
                });

            modelBuilder.Entity("Data.Entities.Plantao", b =>
                {
                    b.HasOne("Data.Entities.Especialidade", "Especialidades")
                        .WithMany()
                        .HasForeignKey("Especialidadesid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Entities.Medico", "Medicos")
                        .WithMany()
                        .HasForeignKey("Medicosid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Entities.UnidadeSaude", "UnidadeSaudes")
                        .WithMany()
                        .HasForeignKey("UnidadeSaudesid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Especialidades");

                    b.Navigation("Medicos");

                    b.Navigation("UnidadeSaudes");
                });
#pragma warning restore 612, 618
        }
    }
}
